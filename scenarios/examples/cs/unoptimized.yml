implementation: cs
name: matrix-multiplication
description: |
    Create two square matrices of size NÃ—N.
    Each cell within these two matrices will be initialized with the sum of their row and column indices.
    Multiply the two matrices and output the contents of the last cell.
code: |
    public class Program {
        public static void Main(string[] args) {
            int n = int.Parse(args[0]);

            double[] A = new double[n * n];
            double[] B = new double[n * n];
            double[] C = new double[n * n];

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    A[i*n + j] = B[i*n + j] = i + j;
                }
            }

            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    double sum = 0.0;
                    for (int k = 0; k < n; k++) {
                        sum += A[i*n + k] * B[k*n + j];
                    }
                    C[i*n + j] = sum;
                }
            }

            Console.WriteLine($"{C[n*n - 1]:F0}");
        }
    }
dependencies:
    - name: dotnet-sdk
target_framework: net9.0
options:
    - -c Release
    - -p:OutputType=Exe
    - -p:ImplicitUsings=enable
    - -p:Nullable=enable
    - -p:AllowUnsafeBlocks=true
    - -p:ServerGarbageCollection=true
    - -p:ConcurrentGarbageCollection=true
    - -p:OptimizationPreference=Speed
    - -p:IlcInstructionSet=native
---
args: [200]
expected_stdout: |
    18487100
